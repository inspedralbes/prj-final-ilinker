## Autogenerated by Scribe. DO NOT MODIFY.

name: Comentarios
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/publications/{publicationId}/comments'
    metadata:
      groupName: Comentarios
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear comentario en una publicación'
      description: 'Este endpoint permite al usuario autenticado añadir un comentario o una respuesta a una publicación existente.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      publicationId:
        name: publicationId
        description: 'El ID de la publicación a la que se desea comentar.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      publicationId: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'El contenido del comentario.'
        required: true
        example: '¡Gran publicación!'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_comment_id:
        name: parent_comment_id
        description: 'El ID del comentario padre si es una respuesta. Opcional.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      content: '¡Gran publicación!'
      parent_comment_id: 12
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Comment created successfully",
            "data": {
              "id": 25,
              "publication_id": 7,
              "user_id": 3,
              "content": "¡Gran publicación!",
              "parent_comment_id": null,
              "created_at": "2024-10-21T12:45:00Z",
              "updated_at": "2024-10-21T12:45:00Z",
              "user": {
                "id": 3,
                "name": "Ana Martínez",
                "rol": "student",
                "student": {
                  "user_id": 3,
                  "photo_pic": "https://example.com/photos/ana.jpg",
                  "name": "Ana Martínez"
                }
              },
              "replies": []
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Publication not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "content": ["The content field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/publications/{publicationId}/comments/{commentId}'
    metadata:
      groupName: Comentarios
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar un comentario de una publicación'
      description: 'Este endpoint permite al usuario autenticado eliminar uno de sus propios comentarios de una publicación, incluyendo sus respuestas anidadas si las hubiera.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      publicationId:
        name: publicationId
        description: 'El ID de la publicación a la que pertenece el comentario.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      commentId:
        name: commentId
        description: 'El ID del comentario que se desea eliminar.'
        required: true
        example: 21
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      publicationId: 7
      commentId: 21
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Comment deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": "error",
            "message": "Unauthorized to delete this comment"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Comment or publication not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/posts/{post_id}/comments'
    metadata:
      groupName: Comentarios
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear un comentario en una publicación'
      description: 'Este endpoint permite agregar un nuevo comentario a una publicación existente.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_id:
        name: post_id
        description: 'The ID of the post.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'El ID de la publicación en la que se quiere comentar.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      post_id: 17
      post: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'El contenido del comentario.'
        required: true
        example: '¡Excelente publicación!'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      content: '¡Excelente publicación!'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 12,
            "post_id": 3,
            "user_id": 5,
            "content": "¡Excelente publicación!",
            "created_at": "2025-05-22T15:45:00Z",
            "updated_at": "2025-05-22T15:45:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
