## Autogenerated by Scribe. DO NOT MODIFY.

name: Publicaciones
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/publications
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear una nueva publicación.'
      description: |-
        Este endpoint permite al usuario autenticado crear una publicación de texto, con ubicación opcional,
        estado (publicada, borrador o archivada), y archivos multimedia como imágenes o videos. Se pueden subir
        múltiples archivos (máx. 50MB por archivo).

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'optional El contenido textual de la publicación. Requerido si no se sube media.'
        required: false
        example: 'Hoy fue un gran día en la playa.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      location:
        name: location
        description: 'optional Ubicación relacionada con la publicación.'
        required: false
        example: 'Barcelona, España'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      comments_enabled:
        name: comments_enabled
        description: 'optional Indica si los comentarios están habilitados. Por defecto es `true`.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'optional Estado de la publicación. Debe ser uno de: published, draft, archived. Default: published.'
        required: false
        example: published
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      media:
        name: media
        description: 'optional Archivos multimedia adjuntos (imágenes o videos). Máximo 50MB por archivo. Tipos permitidos: jpeg, png, jpg, gif, mp4, mov, avi.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      content: 'Hoy fue un gran día en la playa.'
      location: 'Barcelona, España'
      comments_enabled: true
      status: published
    fileParameters:
      media:
        - null
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Publication created successfully",
            "data": {
              "id": 10,
              "user_id": 1,
              "content": "Hoy fue un gran día en la playa.",
              "location": "Barcelona, España",
              "comments_enabled": true,
              "status": "published",
              "has_media": true,
              "created_at": "2025-05-22T12:00:00.000000Z",
              "updated_at": "2025-05-22T12:00:00.000000Z",
              "user": {
                "id": 1,
                "name": "Ana Ruiz"
              },
              "media": [
                {
                  "id": 55,
                  "file_path": "https://miapp.com/storage/media/abc123.jpg"
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "media.0": ["El archivo debe ser una imagen o video y no puede superar los 50MB"]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error creating publication",
            "error": "Mensaje de error interno"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/publications/{id}'
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener una publicación con detalles.'
      description: |-
        Este endpoint permite obtener una publicación específica junto con sus archivos multimedia,
        comentarios (y respuestas), likes y estado de guardado por parte del usuario autenticado.
        También indica si el usuario ha dado "me gusta" o ha guardado la publicación.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the publication.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters:
      id:
        name: id
        description: 'ID del usuario que solicita la publicación.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      id_publication:
        name: id_publication
        description: 'ID de la publicación que se desea mostrar.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      id: 3
      id_publication: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": [
              {
                "id": 15,
                "content": "Una caminata por la montaña",
                "location": "Pirineos",
                "liked": true,
                "saved": false,
                "media": [
                  {
                    "id": 102,
                    "file_path": "https://miapp.com/storage/media/file123.jpg"
                  }
                ],
                "likes": [
                  {
                    "id": 1,
                    "user": {
                      "id": 3,
                      "name": "Ana"
                    }
                  }
                ],
                "comments": [
                  {
                    "id": 22,
                    "content": "¡Hermoso lugar!",
                    "user": {
                      "id": 5,
                      "name": "Carlos",
                      "rol": "usuario"
                    },
                    "replies": [
                      {
                        "id": 23,
                        "content": "Totalmente de acuerdo",
                        "user": {
                          "id": 6,
                          "name": "Laura",
                          "rol": "usuario"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Publication not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error retrieving publication",
            "error": "Mensaje de error interno"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/publications/{id}'
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar una publicación existente.'
      description: |-
        Este endpoint permite al usuario autenticado actualizar su propia publicación.
        Se pueden modificar campos como el contenido, ubicación, estado, si los comentarios están habilitados,
        y agregar nuevos archivos multimedia.
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'El ID de la publicación que se desea actualizar.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'El nuevo contenido de la publicación.'
        required: false
        example: 'Actualizando mi día.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      location:
        name: location
        description: 'La nueva ubicación asociada.'
        required: false
        example: 'Madrid, España'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      comments_enabled:
        name: comments_enabled
        description: 'Indica si se permiten comentarios en esta publicación.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'El nuevo estado de la publicación (published, draft, archived).'
        required: false
        example: draft
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      media:
        name: media
        description: 'Archivos multimedia nuevos para asociar con la publicación. Los tipos permitidos son jpeg, png, jpg, gif, mp4, mov, avi. Máx 50MB por archivo.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      content: 'Actualizando mi día.'
      location: 'Madrid, España'
      comments_enabled: true
      status: draft
    fileParameters:
      media:
        - null
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Publication updated successfully",
            "data": {
              "id": 12,
              "content": "Actualizando mi día.",
              "location": "Madrid, España",
              "status": "draft",
              "comments_enabled": true,
              "has_media": true,
              "media": [
                {
                  "id": 201,
                  "file_path": "https://miapp.com/storage/media/nuevoarchivo.jpg"
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": "error",
            "message": "Unauthorized to update this publication"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Publication not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "content": [
                "The content must be a string."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error updating publication",
            "error": "Mensaje de error interno"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/publications/{id}'
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar una publicación'
      description: |-
        Este endpoint permite al usuario autenticado eliminar una de sus publicaciones.
        También elimina los archivos multimedia asociados, los comentarios y los "me gusta".
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID de la publicación a eliminar.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Publication deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": "error",
            "message": "Unauthorized to delete this publication"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Publication not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error deleting publication",
            "error": "Mensaje de error interno"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/my-liked-publications
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener publicaciones que me han gustado'
      description: |-
        Devuelve una lista de publicaciones que el usuario autenticado ha marcado con "me gusta".
        Cada publicación incluye su contenido multimedia y relaciones con usuarios que comentaron o dieron "me gusta".
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": [
              {
                "id": 1,
                "content": "Texto de la publicación",
                "liked": true,
                "media": [
                  {
                    "file_path": "https://example.com/storage/media/archivo.jpg"
                  }
                ],
                "comments": [...],
                "likes": [...]
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error recogiendo tus me gusta.",
            "error": "Mensaje de error interno"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/publications/{publicationId}/like'
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Alternar "Me gusta" en una publicación'
      description: |-
        Este endpoint permite al usuario autenticado dar o quitar "me gusta" a una publicación.
        Si ya le ha dado "me gusta", lo quitará; si no, lo agregará. También se actualiza el contador de "likes".
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      publicationId:
        name: publicationId
        description: 'El ID de la publicación.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      publicationId: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Publication liked successfully",
            "liked": true,
            "likes_count": 12
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Publication unliked successfully",
            "liked": false,
            "likes_count": 11
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Publication not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error toggling like",
            "error": "Mensaje del error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/publications/share
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Compartir una publicación'
      description: 'Este endpoint permite a un usuario autenticado compartir una publicación existente con contenido opcional adicional.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      original_publication_id:
        name: original_publication_id
        description: 'El ID de la publicación original que se desea compartir.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      content:
        name: content
        description: 'optional Contenido adicional que se desea agregar al compartir la publicación. Max: 1000.'
        required: false
        example: '"Miren esta publicación, está genial."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      original_publication_id: 15
      content: '"Miren esta publicación, está genial."'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Publicación compartida exitosamente",
            "data": {
              "id": 12,
              "content": "Miren esta publicación, está genial.",
              "created_at": "2024-10-01T12:34:56.000000Z",
              "shared_by": {
                "id": 5,
                "name": "Carlos Ruiz"
              },
              "user": {
                "id": 8,
                "name": "Ana Torres"
              },
              "content": "Este es el contenido original de la publicación",
              "media": [
                {
                  "id": 3,
                  "file_path": "https://tuapp.com/storage/media/example.jpg",
                  "media_type": "image",
                  "display_order": 1
                }
              ],
              "has_media": true,
              "location": "Madrid, España",
              "likes_count": 20,
              "comments_count": 5,
              "liked": false,
              "saved": false,
              "shared": true,
              "original_publication_id": 15
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "original_publication_id": [
                "The original publication id field is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al compartir la publicación",
            "error": "Mensaje del error interno"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/shared-publications/{id}'
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar una publicación compartida'
      description: 'Este endpoint permite a un usuario autenticado eliminar una publicación que previamente haya compartido.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'El ID de la publicación compartida a eliminar.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Publicación compartida eliminada exitosamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": "error",
            "message": "No tienes permiso para eliminar esta publicación compartida"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "No se pudo encontrar la publicación compartida"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al eliminar la publicación compartida",
            "error": "Mensaje del error interno"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/my-publications
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener publicaciones de un usuario'
      description: 'Este endpoint devuelve todas las publicaciones realizadas por un usuario específico, incluyendo sus medios, comentarios, likes y estado de guardado.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      id:
        name: id
        description: 'El ID del usuario del cual se quieren obtener las publicaciones.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      id: 12
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": [
              {
                "id": 1,
                "content": "Mi primera publicación",
                "liked": true,
                "saved": false,
                "media": [
                  {
                    "file_path": "https://example.com/storage/media/imagen.jpg"
                  }
                ],
                "likes": [...],
                "comments": [...]
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error retrieving your publications",
            "error": "Mensaje de error interno"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{userId}/shared-publications'
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener publicaciones compartidas por un usuario'
      description: 'Este endpoint devuelve las publicaciones que han sido compartidas por un usuario específico. Cada entrada incluye información de la publicación original, el usuario que la compartió, y los medios relacionados.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: 'El ID del usuario del cual se desean obtener las publicaciones compartidas.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      userId: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {
              "current_page": 1,
              "data": [
                {
                  "id": 3,
                  "content": "Comentario del usuario que comparte",
                  "created_at": "2025-05-22T12:34:56Z",
                  "shared_by": {
                    "id": 15,
                    "name": "Carlos López"
                  },
                  "user": {
                    "id": 8,
                    "name": "Laura Sánchez"
                  },
                  "content": "Contenido de la publicación original",
                  "media": [
                    {
                      "id": 21,
                      "file_path": "https://example.com/storage/media/imagen.jpg",
                      "media_type": "image",
                      "display_order": 1
                    }
                  ],
                  "has_media": true,
                  "location": "Barcelona",
                  "likes_count": 12,
                  "comments_count": 5
                }
              ],
              "last_page": 1,
              "per_page": 10,
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al obtener las publicaciones compartidas",
            "error": "Mensaje de error interno"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar todas las publicaciones'
      description: 'Este endpoint devuelve una lista de todas las publicaciones en orden descendente por fecha de creación. Cada publicación incluye sus relaciones con el usuario, comentarios y "likes".'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "user_id": 3,
              "content": "Este es el contenido de una publicación.",
              "created_at": "2025-05-22T13:45:00Z",
              "updated_at": "2025-05-22T13:45:00Z",
              "user": {
                "id": 3,
                "name": "Ana Pérez",
                "email": "ana@example.com"
              },
              "comments": [
                {
                  "id": 10,
                  "content": "Muy buena publicación.",
                  "user": {
                    "id": 4,
                    "name": "Luis Torres"
                  }
                }
              ],
              "likes": [
                {
                  "id": 7,
                  "user_id": 5
                }
              ]
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{post_id}'
    metadata:
      groupName: Publicaciones
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener una publicación específica'
      description: 'Este endpoint devuelve los detalles de una publicación, incluyendo el usuario que la creó, los comentarios con sus respectivos usuarios y los likes.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_id:
        name: post_id
        description: 'The ID of the post.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'El ID de la publicación.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      post_id: 17
      post: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 5,
            "user_id": 2,
            "content": "Esta es una publicación de ejemplo.",
            "image": "posts/ejemplo.jpg",
            "created_at": "2025-05-22T14:10:00Z",
            "updated_at": "2025-05-22T14:10:00Z",
            "user": {
              "id": 2,
              "name": "Juan Pérez",
              "email": "juan@example.com"
            },
            "comments": [
              {
                "id": 7,
                "content": "Comentario de ejemplo.",
                "user": {
                  "id": 4,
                  "name": "Ana Gómez"
                }
              }
            ],
            "likes": [
              {
                "id": 10,
                "user_id": 3,
                "post_id": 5
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
