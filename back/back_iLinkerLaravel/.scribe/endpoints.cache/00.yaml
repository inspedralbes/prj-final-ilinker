## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Registrar un nou usuari (student, company o institution).'
      description: |-
        Endpoint per registrar un usuari nou i crear les entitats relacionades segons el rol especificat.
        Retorna informació de l'usuari, token d'autenticació i les dades associades (empresa, institució o estudiant).
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Nom de l'usuari. Exemple: Joan"
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      surname:
        name: surname
        description: "Cognom de l'usuari. Exemple: Garcia"
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      birthday:
        name: birthday
        description: 'Data de naixement (format YYYY-MM-DD). Exemple: 2000-05-22'
        required: true
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: "Correu electrònic de l'usuari. Exemple: joan@example.com"
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: "Contrasenya de l'usuari. Exemple: secret123"
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rol:
        name: rol
        description: "Rol de l'usuari: student, company o institutions. Exemple: student"
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      student:
        name: student
        description: 'Informació addicional si el rol és `student`. Exemple: {"phone":"600123123","address":"Carrer Major 1"}'
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      company:
        name: company
        description: 'Informació addicional si el rol és `company`. Exemple: {"name":"Empresa S.L.","sector":"Tecnologia"}'
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      institution:
        name: institution
        description: 'Informació addicional si el rol és `institutions`. Exemple: {"name":"Institut X","location":"Barcelona"}'
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      surname: consequatur
      birthday: consequatur
      email: qkunze@example.com
      password: 'O[2UZ5ij-e/dl4m{o,'
      rol: consequatur
      student: []
      company: []
      institution: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "user": {
              "id": 1,
              "name": "Joan",
              "surname": "Garcia",
              "email": "joan@example.com",
              "rol": "student",
              ...
            },
            "token": "eyJ0eXAiOiJKV1QiLCJh...",
            "student": {
              "id": 1,
              "user_id": 1,
              ...
            },
            "notifications": [...]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "warning",
            "message": "El usuario ya existe en la base de datos."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "El campo name es obligatorio.",
            "errors": {
              "name": ["El campo name es obligatorio."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al crear la empresa."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Iniciar sessió d’un usuari'
      description: 'Endpoint per autenticar un usuari mitjançant email i contrasenya. Retorna un token d’autenticació, les dades de l’usuari, el seu rol associat i notificacions.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Correu electrònic registrat. Exemple: joan@example.com'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Contrasenya de l’usuari. Exemple: secret123'
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: qkunze@example.com
      password: 'O[2UZ5ij-e/dl4m{o,'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Credentials validated",
            "token": "eyJ0eXAiOiJKV1QiLCJh...",
            "user": {
              "id": 1,
              "name": "Joan",
              "email": "joan@example.com",
              "rol": "student",
              "student": { ... }
            },
            "notifications": [...]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Tancar sessió'
      description: 'Endpoint per finalitzar la sessió de l’usuari autenticat. Actualitza l’estat de l’usuari a "offline" i invalida la sessió actual.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/sendRecoveryCode
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Enviar codi de recuperació de contrasenya'
      description: |-
        Aquest endpoint genera i envia un codi de 6 dígits al correu electrònic proporcionat per a recuperar la contrasenya.
        El codi és vàlid durant 15 minuts.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'El correu electrònic de l’usuari. Exemple: user@example.com'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: qkunze@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Codi enviat correctament"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": ["The email field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/verifyCode
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verificar codi de recuperació de contrasenya'
      description: 'Aquest endpoint comprova si el codi enviat per correu és vàlid i no ha caducat.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "Correu electrònic de l'usuari. Exemple: user@example.com"
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      code:
        name: code
        description: 'Codi de 6 dígits rebut per correu.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: qkunze@example.com
      code: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Codi correcte"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "message": "Codi invàlid o caducat"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": ["The email field is required."],
              "code": ["The code field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/resetPassword
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Restablir contrasenya d'usuari"
      description: 'Aquest endpoint permet canviar la contrasenya mitjançant un codi de verificació vàlid.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "Correu electrònic de l'usuari. Exemple: user@example.com"
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      code:
        name: code
        description: 'Codi de 6 dígits enviat per correu.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: "Nova contrasenya de l'usuari."
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: qkunze@example.com
      code: consequatur
      password: 'O[2UZ5ij-e/dl4m{o,'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Contrasenya restablerta correctament"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "message": "Codi invàlid o caducat"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": ["The email field is required."],
              "code": ["The code field is required."],
              "password": ["The password field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/google
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Iniciar sesión con Google'
      description: 'Gestiona el login de usuarios mediante Google OAuth. Crea el usuario si no existe y devuelve un token de autenticación.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Correo electrónico del usuario proporcionado por Google.'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Nombre completo del usuario proporcionado por Google.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: qkunze@example.com
      name: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "token": "string",
            "user": {
               "id": 1,
               "name": "Nombre",
               "surname": "Apellido",
               "email": "user@example.com",
               "rol": "student",
               ...
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "message": "Email is required"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Authentication failed",
            "debug": "Mensaje de error detallado (solo si APP_DEBUG está activo)"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/company/{slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener información de una empresa por su slug'
      description: "Recupera los datos de una empresa usando el identificador único 'slug'."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'Slug único que identifica a la empresa.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      slug: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "company": {
              "id": 1,
              "name": "Empresa Ejemplo",
              "slug": "empresa-ejemplo",
              ...
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Company not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/company/checkCompanyUser
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verifica si un usuario es dueño de una compañía'
      description: 'Valida si el usuario logueado es el dueño de la compañía indicada por ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id_company:
        name: id_company
        description: 'ID de la compañía a verificar.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id_user_loged:
        name: id_user_loged
        description: 'Opcional. ID del usuario logueado para verificar propiedad.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id_company: 17
      id_user_loged: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "El usuario es dueño de la compañia",
            "admin": true,
            "company": {
              "id": 1,
              "name": "Empresa Ejemplo",
              "sectors": [...],
              "skills": [...],
              "offers": [...],
              "followers": 10,
              ...
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "El usuario no es dueño de la compañia",
            "admin": false,
            "company": {...}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Faltan campos obligatorios o tienen errores",
            "errors": {
              "id_company": ["El id del company es requerido"]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/student/{uuid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene la información detallada de un estudiante por UUID.'
      description: |-
        Recupera el estudiante junto con sus datos relacionados: usuario, educación (y la institución asociada),
        experiencia laboral, proyectos y habilidades. Además, obtiene las ofertas asociadas al usuario
        y cuenta sus seguidores.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: 'UUID único del estudiante.'
        required: true
        example: 66529e01-d113-3473-8d6f-9e11e09332ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      uuid: 66529e01-d113-3473-8d6f-9e11e09332ea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "student": {
               "id": 1,
               "uuid": "xxxx-xxxx-xxxx-xxxx",
               "user": {...},
               "education": [...],
               "experience": [...],
               "projects": [...],
               "skills": [
                   {"id": 1, "name": "Skill 1"},
                   {"id": 2, "name": "Skill 2"}
               ],
               "followers": 15,
               ...
            },
            "experience_grouped": {
               "1": [ ...experiencias agrupadas por company_id... ],
               "2": [ ... ]
            },
            "offerUser": [
               {
                   "id": 1,
                   "offer": { ... }
               }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Student not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/allCompanies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene todas las empresas registradas.'
      description: 'Intenta recuperar todas las compañías mediante el servicio `companyService`.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "companies": [
              {
                "id": 1,
                "name": "Empresa 1",
                ...
              },
              {
                "id": 2,
                "name": "Empresa 2",
                ...
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Company not found 222"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Mensaje de error del servidor"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/institution/getInstitutions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene todas las instituciones.'
      description: 'Intenta recuperar todas las instituciones mediante el servicio `institutionService`.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": "success",
            "institutions": [
              {
                "id": 1,
                "name": "Institución 1",
                "logo": "logo1.png"
              },
              {
                "id": 2,
                "name": "Institución 2",
                "logo": "logo2.png"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Mensaje de error del servidor"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/followers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene la lista de seguidores de un usuario.'
      description: |-
        Valida que se proporcione el `user_id` en la petición.
        Opcionalmente puede recibir `me_id` para comprobar si el usuario autenticado sigue a los seguidores.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'El ID del usuario cuyos seguidores se desean obtener.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      me_id:
        name: me_id
        description: 'Opcional. El ID del usuario autenticado para comprobar seguimiento mutuo.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 17
      me_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "followers": [
              {
                "id": 1,
                "name": "Follower Name",
                "follow": true,
                "isFollowed": false
              },
              {
                "id": 2,
                "name": "Another Follower",
                "follow": false,
                "isFollowed": true
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Errors validation: The user id field is required."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/all
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene la lista de todos los usuarios.'
      description: 'Recupera todos los usuarios usando el servicio de usuarios y los devuelve en formato JSON.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Usuarios obtenidos correctamente",
            "users": [
              {
                "id": 1,
                "name": "Nombre Usuario",
                "email": "usuario@example.com",
                // otros campos del usuario...
              },
              {
                "id": 2,
                "name": "Otro Usuario",
                "email": "otro@example.com",
                // otros campos...
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/publications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene todas las publicaciones y publicaciones compartidas del usuario autenticado.'
      description: |-
        Este método carga publicaciones normales y publicaciones compartidas, incluyendo sus relaciones:
        - Usuario que publicó
        - Medios adjuntos
        - Comentarios con usuario
        - Likes
        - Publicaciones guardadas
        - Publicaciones compartidas con usuario que compartió

        También transforma las URLs de los medios para que sean accesibles públicamente.
        Las publicaciones se ordenan por fecha de creación, las normales y las compartidas se combinan.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {
              "data": [
                {
                  "id": 123,
                  "content": "Texto de la publicación",
                  "created_at": "2025-05-22T12:34:56Z",
                  "user": {
                    "id": 1,
                    "name": "Usuario Ejemplo"
                  },
                  "media": [
                    {
                      "id": 10,
                      "file_path": "https://example.com/media/imagen1.jpg",
                      "media_type": "image",
                      "display_order": 1
                    }
                  ],
                  "liked": true,
                  "saved": false,
                  "shared": false,
                  "likes_count": 5,
                  "comments_count": 2
                },
                {
                  "id": 456,
                  "content": "Texto publicación compartida",
                  "created_at": "2025-05-21T11:22:33Z",
                  "shared_by": {
                    "id": 2,
                    "name": "Otro Usuario"
                  },
                  "user": {
                    "id": 3,
                    "name": "Usuario Original"
                  },
                  "media":  []  ,
                  "liked": false,
                  "saved": true,
                  "shared": true,
                  "original_publication_id": 789
                }
          ],

          "total": 2,
              "current_page": 1,
              "per_page": 2,
              "last_page": 1
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {

          "status": "error",
            "message": "Error retrieving publications",
            "error": "Detalle del error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/publications/{publicationId}/comments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene los comentarios principales (sin padre) de una publicación específica junto con sus respuestas anidadas.'
      description: |-
        También se incluye información del usuario que comentó, incluyendo sus posibles roles y datos relacionados (estudiante, empresa, institución).
        Solo se obtienen los comentarios si están habilitados para la publicación.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      publicationId:
        name: publicationId
        description: 'ID de la publicación.'
        required: true
        example: 123
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      publicationId: 123
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": [
              {
                "id": 1,
                "publication_id": 123,
                "user_id": 10,
                "content": "Comentario principal",
                "created_at": "2025-05-22T12:00:00Z",
                "user": {
                  "id": 10,
                  "name": "Juan Pérez",
                  "rol": "student",
                  "student": {
                    "user_id": 10,
                    "photo_pic": "https://example.com/photos/juan.jpg",
                    "name": "Juan Pérez",
                    "uuid": "uuid-student-123"
                  },
                  "company": null,
                  "institutions": null
                },
                "replies": [
                  {
                    "id": 2,
                    "publication_id": 123,
                    "parent_comment_id": 1,
                    "user_id": 11,
                    "content": "Respuesta al comentario",
                    "created_at": "2025-05-22T12:30:00Z",
                    "user": {
                      "id": 11,
                      "name": "Empresa X",
                      "rol": "company",
                      "student": null,
                      "company": {
                        "user_id": 11,
                        "logo": "https://example.com/logos/companyx.png",
                        "name": "Empresa X",
                        "slug": "empresa-x"
                      },
                      "institutions": null
                    }
                  }
                ]
              }
            ],
            "num_comment": 5
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": "error",
            "message": "Comments are disabled for this publication"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Publication not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error retrieving comments",
            "error": "Detalle del error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/skills
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene todas las habilidades disponibles.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": [
              {
                "id": 1,
                "name": "JavaScript"
              },
              {
                "id": 2,
                "name": "PHP"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error retrieving skills.",
            "error": "Detalle del error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/sectors
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obté tots els sectors disponibles.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": [
              {
                "id": 1,
                "name": "Tecnologia",
                "created_at": "2024-01-01T12:00:00Z",
                "updated_at": "2024-01-01T12:00:00Z"
              },
              {
                "id": 2,
                "name": "Educació",
                "created_at": "2024-01-01T12:00:00Z",
                "updated_at": "2024-01-01T12:00:00Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/page/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene los sectores y países para la página de registro.'
      description: |-
        Esta función obtiene la lista de sectores desde la base de datos y la lista de países
        desde una API externa (`https://restcountries.com/v3.1/all`). En caso de fallo al obtener
        los países, devuelve un array vacío.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "sectors": [
              {
                "id": 1,
                "name": "Tecnología"
              },
              {
                "id": 2,
                "name": "Educación"
              }
            ],
            "countries": [
              {
                "name": {
                  "common": "Spain",
                  "official": "Kingdom of Spain"
                },
                "cca2": "ES",
                "region": "Europe",
                ...
              },
              ...
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred while fetching data",
            "error": "Detalles del error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/page/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene las últimas ofertas de prácticas activas paginadas.'
      description: |-
        Esta función devuelve una paginación de 5 ofertas activas más recientes,
        incluyendo la información de la empresa relacionada y los usuarios interesados.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Se han enviado las ofertas correctamente",
            "data": {
              "current_page": 1,
              "data": [
                {
                  "id": 123,
                  "title": "Práctica en Desarrollo Web",
                  "company": {
                    "id": 10,
                    "name": "Empresa XYZ",
                    ...
                  },
                  "users_interested": [
                    { "id": 1, "name": "Usuario 1" },
                    { "id": 2, "name": "Usuario 2" }
                  ],
                  ...
                }
              ],
              "first_page_url": "...",
              "last_page": 3,
              "last_page_url": "...",
              "next_page_url": "...",
              "prev_page_url": null,
              "per_page": 5,
              "total": 15
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred while fetching data",
            "error": "Detalles del error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/page/search-filtered
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Busca ofertas de prácticas filtradas según varios criterios.'
      description: |-
        Los filtros disponibles son:
        1) Texto libre (title, skills, description)
        2) Ubicación (latitud y longitud con un rango pequeño)
        3) Tipo de jornada (schedule_type)
        4) Modalidad de ubicación (location_type)
        5) Fecha de creación (últimas 24 horas, última semana, último mes o cualquier fecha)

        Parámetros esperados en la petición (Request):
        - searchQuery (string, opcional): Texto libre para buscar en título, habilidades o descripción.
        - locationQuery (array, opcional): Array con 'lat' y 'lng' para filtrar por ubicación cercana.
        - scheduleTypeQuery (string, opcional): Tipo de jornada laboral.
        - locationTypeQuery (string, opcional): Modalidad de la práctica (remoto, presencial, etc).
        - dateQuery (string, opcional): Filtro por fecha, valores posibles: "24", "week", "month", "any".

        Respuesta exitosa (200):
        {
          "status": "success",
          "message": "Ofertas filtradas correctamente",
          "data": {
              "current_page": 1,
              "data": [
                  {
                      "id": 123,
                      "title": "Práctica en Desarrollo Web",
                      "company": {...},
                      "users_interested": [...],
                      ...
                  }
              ],
              "first_page_url": "...",
              "last_page": 3,
              "last_page_url": "...",
              "next_page_url": "...",
              "prev_page_url": null,
              "per_page": 5,
              "total": 15
          }
        }

        Respuesta en caso de error (500):
        {
          "status": "error",
          "message": "Error fetching data",
          "error": "Mensaje detallado del error"
        }
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/page/profile/company
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Obté informació de sectors i habilitats per al perfil d'una empresa."
      description: |-
        Retorna tots els sectors i habilitats disponibles.

        Resposta exitosa (200):
        {
          "status": "success",
          "message": "Se han enviado las ofertas correctamente",
          "sectors": [
              { "id": 1, "name": "Tecnología" },
              { "id": 2, "name": "Salud" },
              ...
          ],
          "skills": [
              { "id": 1, "name": "JavaScript" },
              { "id": 2, "name": "PHP" },
              ...
          ]
        }

        En cas d'error (500):
        {
          "status": "error",
          "message": "An error occurred while fetching data",
          "error": "Missatge detallat de l'error"
        }
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"Se han enviado las ofertas correctamente","sectors":[{"id":1,"name":"Tecnolog\u00eda"},{"id":2,"name":"Salud"},{"id":3,"name":"Finanzas"},{"id":4,"name":"Educaci\u00f3n"},{"id":5,"name":"Energ\u00eda"},{"id":6,"name":"Manufactura"},{"id":7,"name":"Retail"},{"id":8,"name":"Turismo"},{"id":9,"name":"Construcci\u00f3n"},{"id":10,"name":"Telecomunicaciones"}],"skills":[{"id":216,"name":"Administraci\u00f3n de sistemas inform\u00e1ticos en red"},{"id":217,"name":"Administraci\u00f3n y finanzas"},{"id":161,"name":"Agua"},{"id":62,"name":"Alimentaci\u00f3n animal"},{"id":137,"name":"An\u00e1lisis"},{"id":43,"name":"An\u00e1lisis financiero"},{"id":111,"name":"Animaci\u00f3n 2D y 3D"},{"id":210,"name":"Animaci\u00f3n 3D, juegos y entornos interactivos"},{"id":20,"name":"Animaci\u00f3n al aire libre"},{"id":55,"name":"Asesoramiento a la direcci\u00f3n"},{"id":41,"name":"Asesoramiento financiero"},{"id":66,"name":"Asistencia veterinaria"},{"id":177,"name":"Automatizaci\u00f3n"},{"id":167,"name":"Biomasa"},{"id":136,"name":"Branding"},{"id":148,"name":"CAD"},{"id":142,"name":"C\u00e1lculo"},{"id":159,"name":"Centrales"},{"id":118,"name":"Cer\u00e1mica"},{"id":200,"name":"Ciencias sociales (geograf\u00eda e historia)"},{"id":147,"name":"Cimentaci\u00f3n"},{"id":152,"name":"Circuitos"},{"id":140,"name":"Comunicaci\u00f3n"},{"id":47,"name":"Comunicaci\u00f3n efectiva"},{"id":58,"name":"Conocimiento normativo"},{"id":73,"name":"Conservaci\u00f3n de ecosistemas"},{"id":93,"name":"Conservaci\u00f3n del medio rural"},{"id":176,"name":"Construcci\u00f3n de maquinaria"},{"id":31,"name":"Contabilidad financiera"},{"id":143,"name":"Control"},{"id":192,"name":"Control de calidad"},{"id":37,"name":"Control de costes"},{"id":82,"name":"Control de especies invasoras"},{"id":76,"name":"Control de incendios forestales"},{"id":8,"name":"Control de peso y composici\u00f3n corporal"},{"id":61,"name":"Control sanitario"},{"id":51,"name":"Coordinaci\u00f3n de tareas"},{"id":104,"name":"Creaci\u00f3n de contenidos multimedia"},{"id":59,"name":"Cuidado de animales"},{"id":15,"name":"Deporte adaptado"},{"id":207,"name":"Desarrollo de aplicaciones multiplataforma (DAM)"},{"id":208,"name":"Desarrollo de aplicaciones web (DAW)"},{"id":189,"name":"Desarrollo de productos"},{"id":155,"name":"Diagn\u00f3stico"},{"id":60,"name":"Diagn\u00f3stico animal"},{"id":19,"name":"Dinamizaci\u00f3n de grupos"},{"id":115,"name":"Dise\u00f1o art\u00edstico"},{"id":98,"name":"Dise\u00f1o de jardines"},{"id":108,"name":"Dise\u00f1o de portadas"},{"id":21,"name":"Dise\u00f1o de programas deportivos"},{"id":100,"name":"Dise\u00f1o gr\u00e1fico"},{"id":180,"name":"Dise\u00f1o industrial"},{"id":87,"name":"Dise\u00f1o paisaj\u00edstico"},{"id":103,"name":"Dise\u00f1o web"},{"id":211,"name":"Dise\u00f1o y gesti\u00f3n de la producci\u00f3n gr\u00e1fica"},{"id":135,"name":"E-commerce"},{"id":101,"name":"Edici\u00f3n de im\u00e1genes"},{"id":110,"name":"Edici\u00f3n de video"},{"id":86,"name":"Educaci\u00f3n ambiental"},{"id":35,"name":"Elaboraci\u00f3n de contratos"},{"id":46,"name":"Elaboraci\u00f3n de informes"},{"id":32,"name":"Elaboraci\u00f3n de presupuestos"},{"id":151,"name":"Electr\u00f3nica"},{"id":153,"name":"Energ\u00eda"},{"id":209,"name":"Ense\u00f1anza y animaci\u00f3n sociodeportiva"},{"id":10,"name":"Entrenamiento cardiovascular"},{"id":9,"name":"Entrenamiento de fuerza"},{"id":1,"name":"Entrenamiento f\u00edsico"},{"id":13,"name":"Entrenamiento funcional"},{"id":168,"name":"E\u00f3lica"},{"id":156,"name":"Equipos"},{"id":117,"name":"Escultura"},{"id":195,"name":"Estandarizaci\u00f3n"},{"id":145,"name":"Estructuras"},{"id":77,"name":"Evaluaci\u00f3n de impacto ambiental"},{"id":5,"name":"Evaluaci\u00f3n de la condici\u00f3n f\u00edsica"},{"id":181,"name":"Fabricaci\u00f3n avanzada"},{"id":6,"name":"Fisiolog\u00eda del ejercicio"},{"id":157,"name":"Fotovoltaica"},{"id":204,"name":"Fundamentos del arte"},{"id":169,"name":"Geot\u00e9rmica"},{"id":141,"name":"Gesti\u00f3n"},{"id":206,"name":"Gesti\u00f3n administrativa"},{"id":128,"name":"Gesti\u00f3n comercial"},{"id":45,"name":"Gesti\u00f3n de agendas"},{"id":56,"name":"Gesti\u00f3n de archivos"},{"id":172,"name":"Gesti\u00f3n de calidad"},{"id":42,"name":"Gesti\u00f3n de calidad administrativa"},{"id":40,"name":"Gesti\u00f3n de compras y ventas"},{"id":39,"name":"Gesti\u00f3n de documentaci\u00f3n"},{"id":90,"name":"Gesti\u00f3n de espacios verdes"},{"id":18,"name":"Gesti\u00f3n de eventos deportivos"},{"id":78,"name":"Gesti\u00f3n de fauna y flora"},{"id":23,"name":"Gesti\u00f3n de instalaciones deportivas"},{"id":84,"name":"Gesti\u00f3n de parques naturales"},{"id":30,"name":"Gesti\u00f3n de personal"},{"id":38,"name":"Gesti\u00f3n de proyectos"},{"id":105,"name":"Gesti\u00f3n de proyectos editoriales"},{"id":33,"name":"Gesti\u00f3n de recursos humanos"},{"id":48,"name":"Gesti\u00f3n de reuniones"},{"id":34,"name":"Gesti\u00f3n de tesorer\u00eda"},{"id":50,"name":"Gesti\u00f3n de viajes"},{"id":97,"name":"Gesti\u00f3n del agua"},{"id":36,"name":"Gesti\u00f3n fiscal y tributaria"},{"id":72,"name":"Gesti\u00f3n forestal"},{"id":67,"name":"Gesti\u00f3n ganadera"},{"id":123,"name":"Grabado"},{"id":166,"name":"Hidr\u00e1ulica"},{"id":203,"name":"Historia del arte"},{"id":202,"name":"Historia del mundo contempor\u00e1neo"},{"id":196,"name":"Ingenier\u00eda de procesos"},{"id":179,"name":"Ingenier\u00eda mec\u00e1nica"},{"id":150,"name":"Instalaci\u00f3n"},{"id":158,"name":"Instrumentaci\u00f3n"},{"id":218,"name":"Integraci\u00f3n social"},{"id":130,"name":"Investigaci\u00f3n"},{"id":125,"name":"Joyer\u00eda"},{"id":219,"name":"Laboratorio cl\u00ednico y biom\u00e9dico"},{"id":197,"name":"Lengua castellana y literatura"},{"id":198,"name":"Lengua catalana y literatura"},{"id":199,"name":"Lengua extranjera (ingl\u00e9s, franc\u00e9s, alem\u00e1n)"},{"id":29,"name":"Liderazgo y gesti\u00f3n de grupos"},{"id":205,"name":"Literatura universal"},{"id":122,"name":"Madera"},{"id":49,"name":"Manejo de correspondencia"},{"id":64,"name":"Manejo de ganado"},{"id":75,"name":"Manejo de recursos naturales"},{"id":70,"name":"Mantenimiento de equipos"},{"id":91,"name":"Mantenimiento de jardines"},{"id":178,"name":"Mantenimiento de maquinaria"},{"id":215,"name":"Mantenimiento electr\u00f3nico"},{"id":190,"name":"Mantenimiento industrial"},{"id":194,"name":"Mantenimiento predictivo"},{"id":184,"name":"Manufactura aditiva"},{"id":102,"name":"Maquetaci\u00f3n de publicaciones"},{"id":129,"name":"Marketing"},{"id":134,"name":"Marketing digital"},{"id":124,"name":"Marroquiner\u00eda"},{"id":175,"name":"Materiales"},{"id":182,"name":"Mecatr\u00f3nica"},{"id":193,"name":"M\u00e9todos de fabricaci\u00f3n"},{"id":57,"name":"Negociaci\u00f3n y resoluci\u00f3n de conflictos"},{"id":173,"name":"Normativas internacionales"},{"id":83,"name":"Normativas medioambientales"},{"id":71,"name":"Normativas sanitarias"},{"id":2,"name":"Nutrici\u00f3n deportiva"},{"id":186,"name":"Optimizaci\u00f3n de procesos"},{"id":53,"name":"Organizaci\u00f3n de actividades"},{"id":16,"name":"Organizaci\u00f3n de actividades recreativas"},{"id":116,"name":"Pintura"},{"id":139,"name":"Planificaci\u00f3n"},{"id":25,"name":"Planificaci\u00f3n de actividades deportivas"},{"id":88,"name":"Planificaci\u00f3n de espacios rurales"},{"id":3,"name":"Planificaci\u00f3n de rutinas de ejercicio"},{"id":79,"name":"Planificaci\u00f3n forestal"},{"id":112,"name":"Preimpresi\u00f3n"},{"id":146,"name":"Presupuestos"},{"id":65,"name":"Prevenci\u00f3n de enfermedades"},{"id":11,"name":"Prevenci\u00f3n de lesiones deportivas"},{"id":24,"name":"Primeros auxilios deportivos"},{"id":212,"name":"Producci\u00f3n de audiovisuales y espect\u00e1culos"},{"id":109,"name":"Producci\u00f3n de material gr\u00e1fico"},{"id":133,"name":"Promoci\u00f3n"},{"id":80,"name":"Protecci\u00f3n de suelos y aguas"},{"id":170,"name":"Prototipos"},{"id":165,"name":"Proyectos"},{"id":171,"name":"Proyectos innovadores"},{"id":7,"name":"Psicolog\u00eda deportiva"},{"id":22,"name":"Psicolog\u00eda y motivaci\u00f3n deportiva"},{"id":114,"name":"Publicaciones digitales"},{"id":131,"name":"Publicidad"},{"id":213,"name":"Realizaci\u00f3n de proyectos audiovisuales y espect\u00e1culos"},{"id":149,"name":"Recursos"},{"id":54,"name":"Redacci\u00f3n de actas"},{"id":113,"name":"Redacci\u00f3n de textos"},{"id":164,"name":"Redes"},{"id":138,"name":"Relaciones comerciales"},{"id":160,"name":"Renovables"},{"id":63,"name":"Reproducci\u00f3n animal"},{"id":120,"name":"Restauraci\u00f3n"},{"id":74,"name":"Restauraci\u00f3n ambiental"},{"id":96,"name":"Restauraci\u00f3n ecol\u00f3gica"},{"id":89,"name":"Restauraci\u00f3n paisaj\u00edstica"},{"id":187,"name":"Rob\u00f3tica"},{"id":68,"name":"Salud p\u00fablica veterinaria"},{"id":191,"name":"Seguridad industrial"},{"id":27,"name":"Sensibilizaci\u00f3n ambiental en deporte"},{"id":188,"name":"Simulaci\u00f3n de procesos"},{"id":162,"name":"Solar"},{"id":185,"name":"Soldadura"},{"id":214,"name":"Sonido para audiovisuales y espect\u00e1culos"},{"id":94,"name":"Sostenibilidad ambiental"},{"id":17,"name":"T\u00e9cnicas de animaci\u00f3n sociocultural"},{"id":183,"name":"T\u00e9cnicas de control"},{"id":14,"name":"T\u00e9cnicas de entrenamiento grupal"},{"id":12,"name":"T\u00e9cnicas de estiramiento y flexibilidad"},{"id":174,"name":"T\u00e9cnicas de fabricaci\u00f3n"},{"id":95,"name":"T\u00e9cnicas de jardiner\u00eda"},{"id":99,"name":"T\u00e9cnicas de plantaci\u00f3n"},{"id":81,"name":"T\u00e9cnicas de reforestaci\u00f3n"},{"id":4,"name":"T\u00e9cnicas de rehabilitaci\u00f3n"},{"id":127,"name":"T\u00e9cnicas manuales"},{"id":201,"name":"Tecnolog\u00eda industrial"},{"id":154,"name":"Telecomunicaciones"},{"id":163,"name":"T\u00e9rmica"},{"id":121,"name":"Textiles"},{"id":106,"name":"Tipograf\u00eda"},{"id":144,"name":"Topograf\u00eda"},{"id":26,"name":"Trabajo con colectivos vulnerables"},{"id":28,"name":"Trabajo en equipo"},{"id":119,"name":"Trabajo en metal"},{"id":69,"name":"Tratamientos veterinarios"},{"id":52,"name":"Uso de herramientas ofim\u00e1ticas"},{"id":44,"name":"Uso de software contable"},{"id":107,"name":"Uso de software de dise\u00f1o"},{"id":85,"name":"Uso sostenible de recursos"},{"id":92,"name":"Uso sostenible del suelo"},{"id":132,"name":"Ventas"},{"id":126,"name":"Vidrio"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/institution
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene todas las instituciones junto con su usuario relacionado.'
      description: |-
        Respuesta exitosa (200):
        [
          {
            "id": 1,
            "name": "Institución Ejemplo",
            "logo": "logo.png",
            "user": {
              "id": 10,
              "name": "Usuario Asociado",
              ...
            },
            ...
          },
          ...
        ]

        Nota: Esta respuesta no incluye un objeto con "status" o "message", simplemente devuelve el array JSON con las instituciones.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/institution/{slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene los datos de una institución específica por su slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: |-
          El slug único de la institución.

          Respuesta exitosa (200):
          {
            "status": "success",
            "data": {
              "id": 1,
              "name": "Institución Ejemplo",
              "slug": "institucion-ejemplo",
              "logo": "logos/logo.png",
              "cover": "covers/cover.png",
              "user": {
                "id": 10,
                "name": "Usuario Asociado",
                ...
              },
              "logo_url": "https://tuapp.com/storage/logos/logo.png",
              "cover_url": "https://tuapp.com/storage/covers/cover.png",
              ...
            }
          }

          Respuesta error 404:
          {
            "status": "error",
            "message": "Institution not found"
          }
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      slug: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"status":"error","message":"Institution not found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/institution/custom/{customUrl}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene los datos de una institución por su slug o custom_url.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customUrl:
        name: customUrl
        description: |-
          El slug o la URL personalizada de la institución.

          Respuesta exitosa (200):
          {
            "status": "success",
            "data": {
              "id": 1,
              "name": "Institución Ejemplo",
              "slug": "institucion-ejemplo",
              "custom_url": "institucion-custom",
              "logo": "logos/logo.png",
              "cover": "covers/cover.png",
              "user": {
                "id": 10,
                "name": "Usuario Asociado",
                ...
              },
              "logo_url": "https://tuapp.com/storage/logos/logo.png",
              "cover_url": "https://tuapp.com/storage/covers/cover.png",
              ...
            }
          }

          Respuesta error 404:
          {
            "status": "error",
            "message": "Institution not found"
          }
        required: true
        example: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      customUrl: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/institution/custom/http://kunze.biz/iste-laborum-eius-est-dolor.html could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/institution/id/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene los datos de una institución por su ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: |-
          El ID de la institución.

          Respuesta exitosa (200):
          {
            "status": "success",
            "data": {
              "id": 1,
              "name": "Institución Ejemplo",
              "slug": "institucion-ejemplo",
              "logo": "logos/logo.png",
              "cover": "covers/cover.png",
              "user": {
                "id": 10,
                "name": "Usuario Asociado",
                ...
              },
              "logo_url": "https://tuapp.com/storage/logos/logo.png",
              "cover_url": "https://tuapp.com/storage/covers/cover.png",
              ...
            }
          }

          Respuesta error 404:
          {
            "status": "error",
            "message": "Institution not found"
          }
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"status":"error","message":"Institution not found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/check
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verifica si el usuario está autenticado y devuelve sus datos junto con notificaciones.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/report-user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear un reporte de usuario.'
      description: |-
        Valida que el usuario reportado exista y que la razón esté presente.
        Luego crea un reporte con el usuario reportado, el usuario que reporta y la razón.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reported_user_id:
        name: reported_user_id
        description: 'ID del usuario que se reporta. Ejemplo: 15'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      reason:
        name: reason
        description: 'Razón del reporte, máximo 1000 caracteres. Ejemplo: "Contenido inapropiado"'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      reported_user_id: 17
      reason: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Reporte enviado correctamente",
            "report": {
              "id": 10,
              "reported_user_id": 15,
              "reported_by_id": 1,
              "reason": "Contenido inapropiado",
              "created_at": "2025-05-22T12:34:56.000000Z",
              "updated_at": "2025-05-22T12:34:56.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "reported_user_id": ["El id del usuario reportado es obligatorio."],
              "reason": ["La razón es obligatoria."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/publications/{publicationId}/save'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Alterna el guardado de una publicación para el usuario autenticado.'
      description: |-
        Si la publicación ya está guardada por el usuario, la elimina.
        Si no, crea un registro de guardado para la publicación y usuario.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      publicationId:
        name: publicationId
        description: 'ID de la publicación a guardar o desguardar. Ejemplo: 42'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      publicationId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Publication saved successfully",
            "saved": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Publication unsaved successfully",
            "saved": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Publication not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error toggling save",
            "error": "Mensaje detallado del error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/publications/saved
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener las publicaciones guardadas por el usuario autenticado.'
      description: |-
        Retorna una lista de publicaciones que el usuario ha guardado,
        incluyendo información del usuario creador, medios adjuntos,
        comentarios con sus usuarios y likes.

        Cada publicación incluye:
        - `liked`: si el usuario ha dado "like" a la publicación.
        - `saved`: siempre `true` porque son publicaciones guardadas.
        - URLs completas de los medios adjuntos.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": [
              {
                "id": 1,
                "title": "Ejemplo de publicación",
                "user": {
                  "id": 10,
                  "name": "Nombre Usuario"
                },
                "media": [
                  {
                    "id": 100,
                    "file_path": "https://example.com/storage/media1.jpg"
                  }
                ],
                "comments": [
                  {
                    "id": 500,
                    "content": "Comentario",
                    "user": {
                      "id": 20,
                      "name": "Comentario Usuario"
                    }
                  }
                ],
                "likes": [...],
                "liked": true,
                "saved": true
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error retrieving saved publications",
            "error": "Mensaje detallado del error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/notifications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener todas las notificaciones del usuario autenticado.'
      description: 'Devuelve un listado de notificaciones junto con la cantidad de notificaciones no leídas.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "notifications": [
                {
                  "id": 1,
                  "type": "App\\Notifications\\SomeNotification",
                  "data": {...},
                  "read_at": null,
                  "created_at": "2025-05-22T10:00:00Z",
                  ...
                },
                ...
              ],
              "unread_count": 3
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/notifications/unread
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener notificaciones no leídas del usuario autenticado.'
      description: 'Devuelve un listado de notificaciones que aún no han sido leídas junto con la cantidad total de estas.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "notifications": [
                {
                  "id": 5,
                  "type": "App\\Notifications\\SomeNotification",
                  "data": {...},
                  "read_at": null,
                  "created_at": "2025-05-22T12:00:00Z",
                  ...
                },
                ...
              ],
              "unread_count": 5
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/notifications/{notification_id}/read'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Marcar una notificación como leída.'
      description: 'Marca como leída una notificación específica siempre que pertenezca al usuario autenticado.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      notification_id:
        name: notification_id
        description: 'The ID of the notification.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notification:
        name: notification
        description: 'El ID de la notificación a marcar como leída.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      notification_id: consequatur
      notification: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Notificación marcada como leída"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "success": false,
            "message": "No autorizado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/notifications/mark-all-read
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Marcar todas las notificaciones del usuario como leídas.'
      description: 'Marca como leídas todas las notificaciones pendientes del usuario autenticado.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "X notificaciones marcadas como leídas"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualiza los datos del usuario.'
      description: 'Valida los campos recibidos y actualiza la información del usuario mediante el servicio UserService.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'ID del usuario.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Nombre del usuario.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      surname:
        name: surname
        description: 'Apellido del usuario.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      birthday:
        name: birthday
        description: 'Fecha de nacimiento del usuario (formato a definir).'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico del usuario.'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
      name: consequatur
      surname: consequatur
      birthday: consequatur
      email: qkunze@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "user": {
              // datos actualizados del usuario
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "field": ["El mensaje de error"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users/info
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene la información detallada de un usuario por su ID.'
      description: |-
        Valida que se reciba el ID del usuario y devuelve la información completa
        utilizando el servicio UserService.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'ID del usuario que se desea obtener.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "user": {
              // datos detallados del usuario
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "warning",
            "message": "El usuario no se encuentra registrado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "id": ["El mensaje de error"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/deactivate
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Da de baja (desactiva) a un usuario por su ID.'
      description: 'Valida que se reciba el ID del usuario y utiliza el servicio UserService para desactivar al usuario.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'ID del usuario a desactivar.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "user": {
              // datos del usuario desactivado
            },
            "message": "El usuario a sido dado de baja correctamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "warning",
            "message": "El usuario no pudo ser dado de baja"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "id": ["El mensaje de error"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/activate
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Da de alta (activa) a un usuario por su ID.'
      description: 'Valida que se reciba el ID del usuario y utiliza el servicio UserService para activar al usuario.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'ID del usuario a activar.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "user": {
              // datos del usuario activado
            },
            "message": "El usuario a sido dado de alta correctamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "warning",
            "message": "El usuario no pudo ser dado de baja"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "id": ["El mensaje de error"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/student/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualiza la información de un estudiante, incluyendo datos del estudiante, habilidades, usuario y archivos opcionales.'
      description: |-
        Recibe datos en JSON para student, skills y user, y opcionalmente archivos para photo_pic y cover_photo.
        Llama al servicio studentService para procesar la actualización.
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      student:
        name: student
        description: 'JSON con los datos del estudiante.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      skills:
        name: skills
        description: 'JSON con las habilidades del estudiante.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'JSON con los datos del usuario.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      photo_pic:
        name: photo_pic
        description: 'optional Archivo de imagen para la foto del estudiante.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cover_photo:
        name: cover_photo
        description: 'optional Archivo de imagen para la foto de portada del estudiante.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      student: consequatur
      skills: consequatur
      user: consequatur
    fileParameters:
      photo_pic: null
      cover_photo: null
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "student": {
               // datos actualizados del estudiante
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              // errores de validación
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/student/getEducationById
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene la información educativa de un estudiante por UUID, incluyendo las instituciones relacionadas.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      uuid:
        name: uuid
        description: 'UUID único del estudiante.'
        required: true
        example: 66529e01-d113-3473-8d6f-9e11e09332ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      uuid: 66529e01-d113-3473-8d6f-9e11e09332ea
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "education": {
              "id": 1,
              "name": "Nombre del estudiante",
              "education": [
                {
                  "id": 10,
                  "degree": "Título obtenido",
                  "institution": {
                    "id": 5,
                    "name": "Nombre de la institución",
                    // otros campos de institución
                  }
                }
              ],
              // otros campos del estudiante
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Student not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/student/offer/get-data
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene los datos del estudiante autenticado junto con su información educativa.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "student": {
              "id": 1,
              "user_id": 10,
              "education": [
                {
                  "id": 5,
                  "degree": "Título de ejemplo",
                  "institution_id": 2,
                  // otros campos de educación
                }
              ],
              // otros campos del estudiante
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Mensaje de error detallado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/company/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Actualiza la información de una empresa, incluyendo logo, foto de portada,
        sectores, habilidades y ofertas relacionadas.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'ID de la empresa.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Nombre de la empresa.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Descripción de la empresa.'
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      logo:
        name: logo
        description: 'Archivo de imagen para el logo (opcional).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cover_photo:
        name: cover_photo
        description: 'Archivo de imagen para la foto de portada (opcional).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sectors:
        name: sectors
        description: 'Lista JSON de sectores con estructura [{id: int, name: string}, ...].'
        required: false
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      skills:
        name: skills
        description: 'Lista JSON de habilidades con estructura [{id: int, name: string}, ...].'
        required: false
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      offers:
        name: offers
        description: 'Lista JSON de ofertas relacionadas (estructura según modelo Offer).'
        required: false
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
      name: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      sectors:
        - consequatur
      skills:
        - consequatur
      offers:
        - consequatur
    fileParameters:
      logo: null
      cover_photo: null
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Empresa actualizada correctamente",
            "company": {
              "id": 1,
              "name": "Nombre Empresa",
              "logo": "companies/logo_1.jpg",
              "cover_photo": "companies/cover_photo_1.jpg",
              "sectors": [...],
              "skills": [...],
              "offers": [...],
              "followers": 42
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No se encontró la empresa"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/institution/store
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crea una nueva institución.'
      description: |-
        Valida los datos de entrada y genera un slug único basado en el nombre si no se proporciona.
        Asocia la institución al usuario autenticado si está logueado.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nombre de la institución, único y máximo 255 caracteres.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Opcional. Slug para la institución, máximo 255 caracteres.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      custom_url:
        name: custom_url
        description: 'Opcional. URL personalizada, máximo 255 caracteres.'
        required: false
        example: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      slogan:
        name: slogan
        description: 'Opcional. Eslogan, máximo 255 caracteres.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      about:
        name: about
        description: 'Opcional. Descripción o información adicional.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      type:
        name: type
        description: 'Opcional. Tipo de institución, máximo 255 caracteres.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      location:
        name: location
        description: 'Opcional. Ubicación, máximo 255 caracteres.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      size:
        name: size
        description: 'Opcional. Tamaño, máximo 255 caracteres.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sector:
        name: sector
        description: 'Opcional. Sector, máximo 255 caracteres.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      founded_year:
        name: founded_year
        description: 'Opcional. Año de fundación, máximo 255 caracteres.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      languages:
        name: languages
        description: 'Opcional. Idiomas.'
        required: false
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      specialties:
        name: specialties
        description: 'Opcional. Especialidades.'
        required: false
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      website:
        name: website
        description: 'Opcional. Página web, máximo 255 caracteres.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone:
        name: phone
        description: 'Opcional. Teléfono, máximo 255 caracteres.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: 'Opcional. Email único, válido, máximo 255 caracteres.'
        required: false
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      user_id:
        name: user_id
        description: 'Opcional. ID del usuario asociado. Debe existir en tabla users.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: consequatur
      slug: consequatur
      custom_url: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
      slogan: consequatur
      about: consequatur
      type: consequatur
      location: consequatur
      size: consequatur
      sector: consequatur
      founded_year: consequatur
      languages:
        - consequatur
      specialties:
        - consequatur
      website: consequatur
      phone: consequatur
      email: qkunze@example.com
      user_id: 17
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Institution created successfully",
            "data": {
              "id": 1,
              "name": "Nombre Institución",
              "slug": "nombre-institucion",
              ...
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "name": ["The name field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error creating institution"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/institution/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualiza una institución existente.'
      description: |-
        Verifica que el usuario autenticado sea propietario de la institución.
        Permite actualizar datos básicos y archivos (logo y cover).
        Genera un slug único si se cambia el nombre.
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'ID de la institución a actualizar.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Opcional. Nombre de la institución, único.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slogan:
        name: slogan
        description: 'Opcional. Eslogan.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      about:
        name: about
        description: 'Opcional. Información adicional.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Opcional. Tipo de institución.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'Opcional. Ubicación.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      size:
        name: size
        description: 'Opcional. Tamaño.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      founded_year:
        name: founded_year
        description: 'Opcional. Año de fundación.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      languages:
        name: languages
        description: 'Opcional. Idiomas.'
        required: false
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'languages.*':
        name: 'languages.*'
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      specialties:
        name: specialties
        description: 'Opcional. Especialidades.'
        required: false
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'specialties.*':
        name: 'specialties.*'
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      website:
        name: website
        description: 'Opcional. Página web.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'Opcional. Teléfono.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Opcional. Email único.'
        required: false
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      logo:
        name: logo
        description: 'Opcional. Archivo de imagen para el logo.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cover:
        name: cover
        description: 'Opcional. Archivo de imagen para la foto de portada.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
      name: consequatur
      slogan: consequatur
      about: consequatur
      type: consequatur
      location: consequatur
      size: consequatur
      founded_year: consequatur
      languages:
        - consequatur
      specialties:
        - consequatur
      website: consequatur
      phone: consequatur
      email: qkunze@example.com
    fileParameters:
      logo: null
      cover: null
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Institution updated successfully",
            "data": {
              "id": 1,
              "name": "Nombre Institución",
              "slug": "nombre-institucion",
              "logo": "institutions/logo_1.png",
              "cover": "institutions/cover_1.png",
              "logo_url": "https://tuapp.com/storage/institutions/logo_1.png",
              "cover_url": "https://tuapp.com/storage/institutions/cover_1.png",
              ...
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": "error",
            "message": "Unauthorized to update this institution"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "name": ["The name has already been taken."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error updating institution: [message del error]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/institution/checkOwner
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verifica si un usuario es propietario de una institución.'
      description: |-
        Valida que los IDs del usuario e institución existan.
        Retorna un booleano indicando si el usuario es dueño de la institución.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'ID del usuario a verificar.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      institution_id:
        name: institution_id
        description: 'ID de la institución.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 17
      institution_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "isOwner": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "user_id": ["The selected user id is invalid."],
              "institution_id": ["The selected institution id is invalid."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error checking institution ownership"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/institution/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene los datos de una institución por su ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: |-
          El ID de la institución.

          Respuesta exitosa (200):
          {
            "status": "success",
            "data": {
              "id": 1,
              "name": "Institución Ejemplo",
              "slug": "institucion-ejemplo",
              "logo": "logos/logo.png",
              "cover": "covers/cover.png",
              "user": {
                "id": 10,
                "name": "Usuario Asociado",
                ...
              },
              "logo_url": "https://tuapp.com/storage/logos/logo.png",
              "cover_url": "https://tuapp.com/storage/covers/cover.png",
              ...
            }
          }

          Respuesta error 404:
          {
            "status": "error",
            "message": "Institution not found"
          }
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"status":"error","message":"Institution not found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/education/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crea un registro de educación para un estudiante.'
      description: |-
        Valida los datos recibidos y utiliza una transacción para asegurar
        la integridad de la base de datos.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      student_id:
        name: student_id
        description: 'ID del estudiante.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      courses_id:
        name: courses_id
        description: 'Opcional, ID del curso relacionado.'
        required: false
        example: consequatur
        type: int|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      institution_id:
        name: institution_id
        description: 'Opcional, ID de la institución educativa.'
        required: false
        example: consequatur
        type: int|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      institute:
        name: institute
        description: 'Opcional, nombre del instituto.'
        required: false
        example: consequatur
        type: string|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      degree:
        name: degree
        description: 'Opcional, título o grado obtenido.'
        required: false
        example: consequatur
        type: string|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      start_date:
        name: start_date
        description: 'Fecha de inicio del estudio.'
        required: true
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Fecha de finalización del estudio.'
        required: false
        example: consequatur
        type: date|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      student_id: 17
      courses_id: consequatur
      institution_id: consequatur
      institute: consequatur
      degree: consequatur
      start_date: consequatur
      end_date: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "education": {
              // Datos del registro creado de educación
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "student_id": ["El campo student_id es obligatorio."],
              "start_date": ["El campo start_date es obligatorio."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al crear la educacion del estudiante."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/education/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualiza un registro de educación para un estudiante.'
      description: |-
        Valida los datos recibidos y utiliza una transacción para asegurar
        la integridad de la base de datos.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'ID del registro de educación a actualizar.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      courses_id:
        name: courses_id
        description: 'Opcional, ID del curso relacionado.'
        required: false
        example: consequatur
        type: int|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      institution_id:
        name: institution_id
        description: 'Opcional, ID de la institución educativa.'
        required: false
        example: consequatur
        type: int|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      institute:
        name: institute
        description: 'Opcional, nombre del instituto.'
        required: false
        example: consequatur
        type: string|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      degree:
        name: degree
        description: 'Opcional, título o grado obtenido.'
        required: false
        example: consequatur
        type: string|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      start_date:
        name: start_date
        description: 'Fecha de inicio del estudio.'
        required: true
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Fecha de finalización del estudio.'
        required: true
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
      courses_id: consequatur
      institution_id: consequatur
      institute: consequatur
      degree: consequatur
      start_date: consequatur
      end_date: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "education": {
              // Datos actualizados del registro de educación
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "id": ["El campo id es obligatorio."],
              "start_date": ["El campo start_date es obligatorio."],
              "end_date": ["El campo end_date es obligatorio."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al actualizar la educacion del estudiante."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/education/delete
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Elimina un registro de educación para un estudiante.'
      description: |-
        Valida el ID recibido y utiliza una transacción para asegurar la integridad
        de la base de datos durante el proceso de eliminación.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'ID del registro de educación a eliminar.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Educacion eliminada"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "id": ["El campo id es obligatorio."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al eliminar la educacion del estudiante."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/experience/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crea un nuevo registro de experiencia laboral para un estudiante.'
      description: |-
        Valida los datos de entrada y utiliza una transacción para asegurar la integridad
        de la base de datos durante la creación.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      student_id:
        name: student_id
        description: 'ID del estudiante.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      company_id:
        name: company_id
        description: 'ID de la empresa (opcional).'
        required: false
        example: consequatur
        type: int|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      company_name:
        name: company_name
        description: 'Nombre de la empresa (opcional).'
        required: false
        example: consequatur
        type: string|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      department:
        name: department
        description: 'Departamento o área.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      employee_type:
        name: employee_type
        description: 'Tipo de empleado.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      company_address:
        name: company_address
        description: 'Dirección de la empresa (opcional).'
        required: false
        example: consequatur
        type: string|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      location_type:
        name: location_type
        description: 'Tipo de ubicación.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Fecha de inicio.'
        required: true
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Fecha de fin (opcional).'
        required: false
        example: consequatur
        type: date|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      student_id: 17
      company_id: consequatur
      company_name: consequatur
      department: consequatur
      employee_type: consequatur
      company_address: consequatur
      location_type: consequatur
      start_date: consequatur
      end_date: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "experience": {
              // datos del registro creado
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "student_id": ["El campo student_id es obligatorio."],
              "department": ["El campo department es obligatorio."],
              "employee_type": ["El campo employee_type es obligatorio."],
              "location_type": ["El campo location_type es obligatorio."],
              "start_date": ["El campo start_date es obligatorio."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al crear la experiencia del estudiante."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/experience/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualiza un registro existente de experiencia laboral para un estudiante.'
      description: |-
        Valida los datos recibidos y usa una transacción para mantener la integridad
        durante la actualización.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'ID del registro de experiencia a actualizar.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      company_id:
        name: company_id
        description: 'ID de la empresa (opcional).'
        required: false
        example: consequatur
        type: int|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      company_name:
        name: company_name
        description: 'Nombre de la empresa (opcional).'
        required: false
        example: consequatur
        type: string|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      department:
        name: department
        description: 'Departamento o área.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      employee_type:
        name: employee_type
        description: 'Tipo de empleado.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      company_address:
        name: company_address
        description: 'Dirección de la empresa (opcional).'
        required: false
        example: consequatur
        type: string|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      location_type:
        name: location_type
        description: 'Tipo de ubicación.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Fecha de inicio.'
        required: true
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Fecha de fin (opcional).'
        required: false
        example: consequatur
        type: date|null
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      id: 17
      company_id: consequatur
      company_name: consequatur
      department: consequatur
      employee_type: consequatur
      company_address: consequatur
      location_type: consequatur
      start_date: consequatur
      end_date: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "experience": {
              // datos actualizados del registro de experiencia
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "id": ["El campo id es obligatorio."],
              "department": ["El campo department es obligatorio."],
              "employee_type": ["El campo employee_type es obligatorio."],
              "location_type": ["El campo location_type es obligatorio."],
              "start_date": ["El campo start_date es obligatorio."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al actualizar la experiencia del estudiante."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/experience/delete
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Elimina un registre d'experiència laboral d'un estudiant."
      description: |-
        Valida que es passi l'ID i utilitza una transacció per assegurar la integritat
        durant l'eliminació.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: "ID del registre d'experiència a eliminar."
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Experiencia Eliminada"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "errors": {
              "id": ["El campo id es obligatorio."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al eliminar la experiencia del estudiante."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/projects/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crea un nou projecte utilitzant el servei `projectService`.'
      description: |-
        Inicia una transacció a la base de dades per assegurar la integritat.
        Si la creació falla, es fa rollback i es retorna un missatge d'advertència.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      (depèn:
        name: (depèn
        description: "servei projectService, s'han de documentar els camps esperats al request)"
        required: false
        example: consequatur
        type: del
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      (depèn: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Project created",
            "project": { ... } // Objecte del projecte creat
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "warning",
            "message": "Project creation failed"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "error": "Descripció de l'error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/projects/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualitza un projecte existent utilitzant el servei `projectService`.'
      description: |-
        Inicia una transacció a la base de dades per garantir la integritat.
        Si l'actualització falla, es fa rollback i es retorna un missatge d'advertència.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      (depèn:
        name: (depèn
        description: "servei projectService, s'han de documentar els camps esperats al request)"
        required: false
        example: consequatur
        type: del
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      (depèn: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Project updated",
            "project": { ... } // Objecte del projecte actualitzat
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "warning",
            "message": "Project update failed"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "error": "Descripció de l'error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/projects/delete
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Elimina un projecte especificat pel seu ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'ID del projecte a eliminar.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Project deleted"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "warning",
            "message": "Project delete failed"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "error": "Descripció de l'error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/skill/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crea una nova skill.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nom de la skill.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "skill": {
              "id": 1,
              "name": "PHP",
              "created_at": "2025-05-22T10:00:00Z",
              "updated_at": "2025-05-22T10:00:00Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "name": ["The name field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al crear una skill"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/skill/assignment
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assigna una skill a un estudiant.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      student_id:
        name: student_id
        description: "ID de l'estudiant."
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      skills_id:
        name: skills_id
        description: 'ID de la skill a assignar.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      student_id: 17
      skills_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "skill": {
              "id": 1,
              "name": "PHP",
              "assigned_to_student_id": 123,
              "created_at": "2025-05-22T10:00:00Z",
              "updated_at": "2025-05-22T10:00:00Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "student_id": ["The student id field is required."],
              "skills_id": ["The skills id field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Error al crear una skill"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/offers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mostra una oferta amb la seva informació relacionada.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the offer.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "offer": {
              "id": 1,
              "title": "Desenvolupador PHP",
              "description": "Oferta de treball...",
              "company": {
                "id": 5,
                "name": "Empresa XYZ",
                ...
              },
              "usersInterested": [
                {
                  "id": 10,
                  "student": {
                    "id": 20,
                    "name": "Joan",
                    "skills": [...],
                    "education": [...]
                  }
                },
                ...
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Offer] 999"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/offers/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crea una nova oferta laboral.'
      description: "Valida els camps obligatoris i en cas de dades correctes crea l'oferta per a la companyia de l'usuari autenticat."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: "Títol de l'oferta."
        required: true
        example: '"Desenvolupador PHP"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      skills:
        name: skills
        description: "Llista de skills requerides per l'oferta."
        required: true
        example:
          - PHP
          - Laravel
          - MySQL
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: "Descripció de l'oferta."
        required: true
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location_type:
        name: location_type
        description: 'Tipus de localització.'
        required: true
        example: '"remote", "onsite"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: "Direcció de l'oferta."
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      lat:
        name: lat
        description: 'Latitud de la ubicació.'
        required: true
        example: 11613.31890586
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      lng:
        name: lng
        description: 'Longitud de la ubicació.'
        required: true
        example: 11613.31890586
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      city:
        name: city
        description: "Ciutat de l'oferta."
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      postal_code:
        name: postal_code
        description: 'Codi postal.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      schedule_type:
        name: schedule_type
        description: "Tipus d'horari."
        required: true
        example: '"full-time", "part-time"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      days_per_week:
        name: days_per_week
        description: 'Dies a la setmana que es treballen.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      salary:
        name: salary
        description: 'Salari ofertat.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      vacancies:
        name: vacancies
        description: 'Nombre de places disponibles.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"Desenvolupador PHP"'
      skills:
        - PHP
        - Laravel
        - MySQL
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      location_type: '"remote", "onsite"'
      address: consequatur
      lat: 11613.31890586
      lng: 11613.31890586
      city: consequatur
      postal_code: consequatur
      schedule_type: '"full-time", "part-time"'
      days_per_week: 17
      salary: consequatur
      vacancies: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Oferta registrada correctamente",
            "data": {
              "id": 1,
              "uuid": "a1b2c3d4...",
              "company_id": 10,
              "title": "Desenvolupador PHP",
              "skills": "[\"PHP\", \"Laravel\"]",
              "description": "...",
              "location_type": "remote",
              "address": "Carrer Falsa 123",
              "lat": 41.3879,
              "lng": 2.16992,
              "schedule_type": "full-time",
              "city": "Barcelona",
              "postal_code": "08001",
              "days_per_week": 5,
              "salary": "2000€",
              "vacancies": 2,
              "created_at": "...",
              "updated_at": "..."
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Faltan campos obligatorios o tienen errores",
            "errors": {
              "title": ["El campo titulo es obligatorio"],
              ...
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Mensaje de error del servidor"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/offers/apply
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Permet a un usuari aplicar-se a una oferta de treball.'
      description: |-
        Valida que es proporcionin l'ID de l'oferta i de l'usuari, guarda arxius adjunts (CV i carta de presentació) si s'envien,
        i registra l'aplicació a la base de dades.
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      offer_id:
        name: offer_id
        description: "ID de l'oferta a la que s'aplica."
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: "ID de l'usuari que aplica."
        required: true
        example: 23
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      availability:
        name: availability
        description: "Opcional. Disponibilitat de l'usuari per l'oferta."
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cv_attachment:
        name: cv_attachment
        description: 'Opcional. Arxiu de CV a adjuntar.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cover_letter_attachment:
        name: cover_letter_attachment
        description: 'Opcional. Arxiu de carta de presentació a adjuntar.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      offer_id: 5
      user_id: 23
      availability: consequatur
    fileParameters:
      cv_attachment: null
      cover_letter_attachment: null
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Oferta registrada correctamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Faltan campos obligatorios o tienen errores",
            "errors": {
              "offer_id": ["El campo oferta es obligatorio"],
              "user_id": ["El campo usuario es obligatorio"]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Mensaje de error del servidor"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/offers/apply/update/status
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Actualitza l'estat de la candidatura d'un usuari a una oferta."
      description: |-
        Valida que es proporcionin l'ID de l'oferta, l'ID de l'usuari i l'estat nou.
        Actualitza l'estat de la candidatura i, si es tracta d'una acceptació,
        comprova si s'ha arribat al nombre màxim de vacants i actualitza l'estat de la oferta i dels candidats pendents.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      offer_id:
        name: offer_id
        description: "ID de l'oferta."
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: "ID de l'usuari."
        required: true
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Nou estat de la candidatura. Exemple: "accept", "rejected", "pending"'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      offer_id: 10
      user_id: 25
      status: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Oferta actualizada correctamente",
            "offer": { ...dades detallades de l'oferta amb relacions carregades... }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Faltan campos obligatorios o tienen errores",
            "errors": {
              "offer_id": ["El campo oferta es obligatorio"],
              "user_id": ["El campo usuario es obligatorio"],
              "status": ["El campo status es obligatorio"]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Mensaje de error del servidor"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/offers/apply-check/{offer_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Comprova si l'usuari autenticat ja ha aplicat a una oferta específica."
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      offer_id:
        name: offer_id
        description: 'The ID of the offer.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      offer_id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Se ha procesado el checkeo correctamente",
            "userHasApplied": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "No query results for model [App\\Models\\Offer] {$offer_id}"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Mensaje de error del servidor"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/courses/getCourses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obté la llista de cursos disponibles.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "courses": [
              {
                "id": 1,
                "name": "Curso 1",
                // Altres camps del curs...
              },
              {
                "id": 2,
                "name": "Curso 2"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Mensaje de error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/chats/my-direct-messages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene todos los chats directos en los que el usuario autenticado participa.'
      description: |-
        Para cada chat, incluye el usuario contrario, el conteo de mensajes no leídos,
        el último mensaje enviado, y estados de guardado y marcado como favorito según el usuario.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "direct_chats": [
              {
                "id": 1,
                "user": {
                  "id": 2,
                  "name": "Nombre del otro usuario",
                  // otros campos del usuario
                },
                "unread_count": 3,
                "last_message": {
                  "id": 45,
                  "content": "Último mensaje enviado",
                  "created_at": "2025-05-22T12:34:56Z"
                },
                "isBookedMarked": true,
                "isSaved": false,
                "updated_at": "2025-05-22T12:34:56Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/chats/get-or-create-direct-chat/{userId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene un chat directo entre el usuario autenticado y otro usuario dado.'
      description: |-
        Si no existe un chat directo entre ellos, lo crea.

        También carga datos relacionados del otro usuario según su rol:
        - Si es empresa, carga la entidad Company asociada.
        - Si es estudiante, carga la entidad Student asociada.
        - Si el usuario autenticado es institución, carga la entidad Institutions asociada al otro usuario.

        Luego, obtiene los últimos 50 mensajes del chat, incluyendo el remitente y archivos adjuntos,
        y marca los mensajes como leídos para el usuario autenticado.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      userId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "direct_chat": {
              "id": 123,
              "user_one_id": 1,
              "user_two_id": 2,
              // otros campos del chat
              "user": {
                "id": 2,
                "rol": "student",
                "student": {
                  // datos del estudiante
                }
                // o company/institution según rol
              }
            },
            "messages": {
              "data": [
                {
                  "id": 456,
                  "content": "Mensaje de ejemplo",
                  "sender": {
                    "id": 1,
                    "name": "Usuario remitente"
                  },
                  "attachments": [
                    // datos de adjuntos
                  ],
                  "created_at": "2025-05-22T13:45:00Z"
                }
              ],
              "current_page": 1,
              "last_page": 1,
              "per_page": 50,
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/chats/suggested-direct-chat
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Obtiene usuarios sugeridos para iniciar un chat directo con base en habilidades compartidas,
        y también obtiene otros contactos adicionales excluyendo los ya sugeridos y al usuario autenticado.
      description: |-
        El método:
        1) Recupera las habilidades del usuario autenticado según su rol (empresa o estudiante).
        2) Busca usuarios (estudiantes y empresas) activos que compartan al menos una habilidad con el usuario.
        3) Devuelve una lista "sugerida" con esos usuarios que comparten habilidades.
        4) Devuelve otra lista "más contactos" con usuarios activos restantes que no están en la lista sugerida ni es el mismo usuario.

        Cada usuario en las listas contiene información básica: id, uuid, slug, user_id, nombre, habilidades, avatar y tipo.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "suggested_all": [
              {
                "id": 5,
                "uuid": "uuid-ejemplo",
                "slug": "slug-ejemplo",
                "user_id": 10,
                "name": "Juan Pérez",
                "skills": ["PHP", "Laravel"],
                "avatar": "url-a-avatar-o-logo",
                "type": "student"
              }
            ],
            "more_contacts": [
              {
                "id": 7,
                "uuid": "uuid-otro-ejemplo",
                "slug": "slug-otro-ejemplo",
                "user_id": 20,
                "name": "Empresa XYZ",
                "skills": ["JavaScript", "React"],
                "avatar": "url-a-avatar-o-logo",
                "type": "company"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "Mensaje de error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/chats/send-direct-chat
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Envía un mensaje directo a uno o más usuarios especificados.'
      description: |-
        El método realiza las siguientes acciones:
        1) Valida que el contenido del mensaje y la lista de destinatarios sean correctos.
        2) Para cada destinatario:
           - Obtiene o crea un chat directo entre el usuario autenticado y el destinatario.
           - Crea un mensaje con el contenido enviado y lo guarda en ese chat.
           - Actualiza el timestamp del chat para reflejar actividad reciente.
           - Carga la relación 'sender' para incluir datos del remitente en la respuesta.
           - Crea una notificación de tipo "new_message" para el destinatario.
        3) Recupera todos los chats directos del usuario autenticado para enviar una lista actualizada.
        4) Ordena los chats por fecha de actualización descendente.
        5) Si sólo hay un destinatario, devuelve directamente el mensaje para facilitar actualización en tiempo real.

        Reglas de validación:
        - 'content': obligatorio, string.
        - 'user_ids': obligatorio, array con al menos un ID de usuario.
        - Cada ID en 'user_ids' debe ser entero, distinto y existir en la tabla users.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_ids:
        name: user_ids
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example:
          - 17
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      content: consequatur
      user_ids:
        - 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "direct_chats": [
              {
                "id": 12,
                "user": { "id": 34, "name": "Juan Pérez", ... },
                "unread_count": 2,
                "last_message": { "id": 55, "content": "Hola!", "sender_id": 1, ... },
                "updated_at": "2025-05-22T10:00:00Z"
              }
            ],
            "dataChat": {
                "status": "success",
                "chat_id": 12,
                "recipient_id": 34,
                "message": { "id": 55, "content": "Hola!", "sender_id": 1, ... }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "errors": {
              "content": ["El contenido es obligatorio."],
              "user_ids": ["Debes indicar al menos un destinatario."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/chats/bookmarked/{directChatId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Marca o desmarca un chat directo como favorito (bookmarked) para el usuario autenticado.'
      description: |-
        Si el usuario autenticado es el participante `user_one_id`, se invierte el valor de
        `is_bookmarked_user_one`. Si es `user_two_id`, se invierte `is_bookmarked_user_two`.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      directChatId:
        name: directChatId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      directChatId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "direct_chat": {
                "id": 15,
                "user_one_id": 3,
                "user_two_id": 7,
                "is_bookmarked_user_one": true,
                "is_bookmarked_user_two": false,
                ...
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/chats/saved/{directChatId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Marca o desmarca un chat directo como guardado para el usuario autenticado.'
      description: |-
        Si el usuario autenticado es el participante `user_one_id`, se invierte el valor de
        `is_saved_user_one`. Si es `user_two_id`, se invierte `is_saved_user_two`.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      directChatId:
        name: directChatId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      directChatId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "direct_chat": {
                "id": 12,
                "user_one_id": 5,
                "user_two_id": 8,
                "is_saved_user_one": true,
                "is_saved_user_two": false,
                ...
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/follow
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Permite al usuario autenticado seguir a otro usuario.'
      description: |-
        Valida que el ID del usuario a seguir sea válido, que no se intente seguir a sí mismo,
        que no exista bloqueo entre los usuarios y que no exista ya una relación de seguimiento.
        Según la configuración de privacidad del usuario a seguir, la relación se aprueba automáticamente
        o queda pendiente de aprobación.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Ahora sigues a este usuario",
            "follow_status": "approved",
            "newFollow": {
                "follower_id": 1,
                "following_id": 2,
                "status": "approved",
                ...
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "warning",
            "message": "Ya sigues a este usuario"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "No puedes seguirte a ti mismo"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": {
                "user_id": ["El id del usuario es requerido"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/unfollow/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Permet al usuari autenticat deixar de seguir a un altre usuari.'
      description: "Elimina la relació de seguiment a la taula 'followers' entre l'usuari autenticat i l'usuari indicat."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Has dejado de seguir a este usuario",
            "unfollow": 1
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "No sigues a este usuario",
            "unfollow": 0
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/follow/approve/{follower_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Aprova una sol·licitud de seguiment pendent d'un usuari que vol seguir l'usuari autenticat."
      description: "Canvia l'estat de la relació de seguiment de 'pending' a 'approved' a la taula 'followers'."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      follower_id:
        name: follower_id
        description: 'The ID of the follower.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      follower_id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Solicitud de seguimiento aprobada"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No se encontró la solicitud de seguimiento"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/follow/reject/{follower_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Rebutja una sol·licitud de seguiment pendent d'un usuari que vol seguir l'usuari autenticat."
      description: "Elimina la relació de seguiment amb estat 'pending' de la taula 'followers'."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      follower_id:
        name: follower_id
        description: 'The ID of the follower.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      follower_id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Solicitud de seguimiento rechazada"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No se encontró la solicitud de seguimiento"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/block
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Bloqueja un usuari especificat per l'usuari autenticat."
      description: |-
        - Valida que el `user_id` existeixi i que no sigui el mateix usuari que fa la crida.
        - Comprova si l'usuari ja està bloquejat.
        - Elimina les relacions de seguidors entre ambdós usuaris (en ambdós sentits).
        - Inserta el registre de bloqueig a la taula `blocked_users`.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Usuario bloqueado exitosamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "warning",
            "message": "Este usuario ya está bloqueado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "message": "No puedes bloquearte a ti mismo"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "user_id": ["El campo user_id es obligatorio y debe existir en la tabla users."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/unblock/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Desbloquea un usuario previamente bloqueado por el usuario autenticado.'
      description: |-
        - Elimina el registro de bloqueo correspondiente de la tabla `blocked_users`.
        - Si se elimina correctamente, devuelve un mensaje de éxito.
        - Si no existía el bloqueo, devuelve un mensaje de advertencia.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Usuario desbloqueado exitosamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "warning",
            "message": "Este usuario no está bloqueado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/following
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene la lista de usuarios que el usuario autenticado está siguiendo.'
      description: 'Recupera la relación `following` del usuario autenticado y la devuelve en formato JSON.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "following": [
              {
                "id": 1,
                "name": "Usuario Ejemplo",
                ...
              },
              ...
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/follow/check/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verificar si el usuario autenticado sigue a otro usuario.'
      description: |-
        Este endpoint permite verificar si el usuario autenticado ya está siguiendo
        a un usuario específico mediante su ID.

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'El ID del usuario a verificar si es seguido. Ejemplo: 5'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "follow": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "success",
            "follow": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/my-followers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener los seguidores del usuario autenticado.'
      description: |-
        Este endpoint devuelve la lista de usuarios que siguen al usuario autenticado.
        También incluye información adicional sobre si el usuario autenticado sigue
        a cada seguidor (`follow`) y si ese seguidor también sigue al usuario autenticado (`isFollowed`).

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "followers": [
              {
                "id": 3,
                "name": "Juan Pérez",
                "email": "juan@example.com",
                "created_at": "2024-10-01T12:34:56.000000Z",
                "updated_at": "2024-11-01T15:45:30.000000Z",
                "follow": true,
                "isFollowed": false
              },
              {
                "id": 4,
                "name": "María García",
                "email": "maria@example.com",
                "created_at": "2024-10-03T10:20:30.000000Z",
                "updated_at": "2024-11-02T13:25:40.000000Z",
                "follow": false,
                "isFollowed": true
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/follow-requests/pending
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener solicitudes de seguimiento pendientes.'
      description: |-
        Este endpoint devuelve una lista de usuarios que han enviado solicitudes de seguimiento
        al usuario autenticado, pero que aún no han sido aceptadas ni rechazadas.

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "pending_requests": [
              {
                "id": 7,
                "name": "Carlos López",
                "email": "carlos@example.com",
                "created_at": "2024-11-01T08:15:00.000000Z",
                "updated_at": "2024-11-05T10:20:00.000000Z"
              },
              {
                "id": 9,
                "name": "Ana Torres",
                "email": "ana@example.com",
                "created_at": "2024-11-02T09:30:00.000000Z",
                "updated_at": "2024-11-06T11:40:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/follow-requests/sent
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener solicitudes de seguimiento enviadas pendientes.'
      description: |-
        Este endpoint devuelve una lista de solicitudes de seguimiento que el usuario autenticado ha enviado,
        pero que aún no han sido aceptadas ni rechazadas por los destinatarios.

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "pending_sent": [
              {
                "id": 12,
                "name": "Lucía Fernández",
                "email": "lucia@example.com",
                "created_at": "2024-11-04T10:15:00.000000Z",
                "updated_at": "2024-11-07T13:20:00.000000Z"
              },
              {
                "id": 15,
                "name": "David Martín",
                "email": "david@example.com",
                "created_at": "2024-11-06T12:45:00.000000Z",
                "updated_at": "2024-11-08T14:30:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/blocked
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener usuarios bloqueados.'
      description: |-
        Este endpoint devuelve una lista de usuarios que han sido bloqueados por el usuario autenticado.

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "blocked_users": [
              {
                "id": 18,
                "name": "Pedro Ramírez",
                "email": "pedro@example.com",
                "created_at": "2024-10-15T11:00:00.000000Z",
                "updated_at": "2024-11-05T12:30:00.000000Z"
              },
              {
                "id": 21,
                "name": "Sofía Méndez",
                "email": "sofia@example.com",
                "created_at": "2024-10-20T14:25:00.000000Z",
                "updated_at": "2024-11-06T09:45:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/settings/toggle-account-privacy
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Alternar privacidad de la cuenta del usuario autenticado.'
      description: |-
        Este endpoint permite al usuario autenticado cambiar el estado de privacidad de su cuenta.
        Si la cuenta es pública, se cambiará a privada, y viceversa.

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Tu cuenta ahora es privada",
            "is_public_account": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Tu cuenta ahora es pública",
            "is_public_account": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/settings/account-status
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener el estado de privacidad de la cuenta del usuario autenticado.'
      description: |-
        Este endpoint devuelve si la cuenta del usuario autenticado es pública o privada.

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Tu cuenta es pública",
            "is_public_account": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Tu cuenta es privada",
            "is_public_account": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/settings/profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener el perfil completo del usuario autenticado.'
      description: |-
        Este endpoint devuelve el perfil del usuario autenticado, incluyendo relaciones como
        instituciones, empresa y estudiante si existen.

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "profile": {
              "id": 1,
              "name": "Laura Gómez",
              "email": "laura@example.com",
              "created_at": "2024-09-15T10:00:00.000000Z",
              "updated_at": "2024-11-01T12:00:00.000000Z",
              "institutions": [
                {
                  "id": 2,
                  "name": "Universidad Central"
                }
              ],
              "company": {
                "id": 3,
                "name": "TechCorp"
              },
              "student": {
                "id": 5,
                "major": "Ingeniería Informática"
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/settings/profile/new-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar la contraseña del usuario autenticado.'
      description: |-
        Este endpoint permite al usuario cambiar su contraseña. Se requiere proporcionar
        la contraseña actual, la nueva contraseña y su confirmación. La nueva contraseña
        solo se actualiza si la actual es válida y la confirmación coincide.

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      current_password:
        name: current_password
        description: 'La contraseña actual del usuario.'
        required: true
        example: actual123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      new_password:
        name: new_password
        description: 'La nueva contraseña que se desea establecer.'
        required: true
        example: nuevaSegura456
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      confirm_password:
        name: confirm_password
        description: 'Confirmación de la nueva contraseña. Debe coincidir con `new_password`.'
        required: true
        example: nuevaSegura456
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      current_password: actual123
      new_password: nuevaSegura456
      confirm_password: nuevaSegura456
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Contraseña actualizada correctamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "error",
            "message": "Las contraseñas no coinciden"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "error",
            "message": "La contraseña actual es incorrecta"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "errors": {
              "current_password": ["La contraseña actual es requerida"],
              "new_password": ["La nueva contraseña es requerida"],
              "confirm_password": ["La confirmación de la nueva contraseña es requerida"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/settings/profile/new-email
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar el correo electrónico del usuario autenticado.'
      description: |-
        Este endpoint permite al usuario autenticado actualizar su dirección de correo electrónico.

        Requiere autenticación mediante token.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'El nuevo correo electrónico del usuario. Debe tener formato válido.'
        required: true
        example: nuevo@email.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: nuevo@email.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Email editado correctamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "errors": {
              "email": ["El email es requerido"]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "errors": "Error interno del servidor o mensaje de excepción"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/companies/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
